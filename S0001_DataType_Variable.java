package com.test.summary;

public class S0001_DataType_Variable {

	public static void main(String[] args) {
		
		// 자료형 변수명 = 리터럴;
		// - 이 3개가 모여야 데이터를 취급하는 상태가 된다.
		
		// 변수명 규칙
		/*
		1. 영문자, 숫자, _만을 사용하는 것을 원칙으로 한다.
		2. 숫자로 시작할 수 없다. X
		3. 예약어(키워드)를 사용할 수 없다. X
		4. 변수명은 의미가 명확해야 한다. 생략하지 않고 풀네임을 사용한다.
		5. 대소문자를 구분한다.
		
		+ $는 파이썬 같은 언어에서 사용한다.
		+ 폴더 경로에 한글을 사용하지 않는다.
		*/
		
		int num = 10;
		
		int age;
		age = 20; // 수정, 치환
		
		String name = "Isaac";
		
		int weight, height;
		
		int kor = 100, eng = 90, math = 80;
		
		
		// 상수 표현
		System.out.println(kor); // 가독성 높음 (변수명 = 의미)		
		System.out.println(100); // 가독성 낮음 (상수는 그 의미를 추측하기 힘듬)
		
		
		// 변수 명명법 패턴
		// 자바에서는 파스칼 표기법과 캐멀 표기법을 주로 사용한다.
		
		/*
		파스칼 표기법
		식별자 단어의 첫 문자를 대문자로 표기하고, 나머지 문자는 소문자로 표기하는 방법이다.
		
		따라서 2개 이상의 단어를 합쳐서 만든 이름일 때 파스칼 표기법의 장점이 있다.
		요약하자면 모든 단어를 붙이고, 각 단어의 첫 문자를 대문자로 표기하는 방법이다.
		사용: 클래스명
		*/

		byte Height; // 파스칼 표기법
		byte EnglishScore; // 파스칼 표기법
		
		/*
		캐멀 표기법
		식별자 단어의 첫문자를 소문자로 표기하고, 다음 단어의 첫문자부터 대문자로 표기하는 방법이다.
		파스칼 표기법과 마찬가지로 2개 이상의 단어를 합쳐서 만든 이름일 때 장점이 생긴다.
		파스칼 표기법과 캐멀 표기법은 사용할 때 있어서 첫 글자의 대문자만 다르다.
		사용: 변수명, 메소드명
		
		*/
		byte MathScore; // 파스칼 표기법
		byte mathScore; // 캐멀 표기법

		byte MapPositionLatitude; // 파스칼 표기법
		byte mapPositionLatitude; // 캐멀 표기법
		
		
		// 자바 기수 표기법
		// 숫자를 사용하여 기록해서 수를 적는 방법이다.
		// 기수 표현에 상관 없이 출력하면 10진수로 출력된다.
		
		// 숫자 데이터 표기 > 3개의 기수법 지원
		// 1. 10진수 > 10
		System.out.println(10);
		
		// 2. 8진수 > 0으로 시작 > 010 (0으로 시작한다. 0 ~ 7표현)
		System.out.println(010);
		
		// 3. 16진수 > 0x로 시작 > 0x10 16 (0x로 시작한다.)
		System.out.println(0x10);
	}
}
